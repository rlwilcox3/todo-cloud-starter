dist: xenial
sudo: required
language: node_js

services:
  - docker
memory: 4096  # Set memory to 4 GB
cpu: 2  # Set CPU cores to 2

# Get Google Chrome headless browser for Angular tests
# Install latest Docker CE so we can use Dockerfile outside build context
addons:
  apt:
    packages:
      - docker-ce
env:
  - DOCKER_COMPOSE_VERSION=v2.26.1

# Install any dependencies, update Docker Compose to 2.26.1 so we can use Dockerfile outside build context
before_install:
  - docker --version
  - docker-compose --version
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose --version
  - docker --version
#install:

# Build development images for test
# before_script:
#   - docker build --no-cache ./todo-view -f ./todo-view/Dockerfile.dev -t rlwilcox3/todo-view-test
#   - docker build --no-cache ./todo-cache-service -f ./todo-cache-service/Dockerfile.nodejs.dev -t rlwilcox3/todo-cache-service-test

# Run some tests
script:
  # - docker run rlwilcox3/todo-cache-service-test npm test
  - set x
  - echo $DOCKER_CONTENT_TRUST
  - export DOCKER_CONTENT_TRUST=0
  - echo $DOCKER_CONTENT_TRUST

after_success:
  # Login to Docker Hub
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin

  # Build Production Images for deployment
  - docker-compose -f docker-compose.yml -f docker-compose.prod.yml build --no-cache

  # Take the built production images and push to Docker Hub
  - docker-compose -f docker-compose.yml -f docker-compose.prod.yml push

deploy:
  provider: elasticbeanstalk
  region: us-west-1
  app: Todo Application
  env: TodoApplication-env-1
  bucket_name: elasticbeanstalk-us-west-1-533267353433
  bucket_path: todo-app
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY

